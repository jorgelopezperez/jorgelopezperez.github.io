<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>pyadventures</title><link href="https://jorgelopezperez.github.io/" rel="alternate"></link><link href="https://jorgelopezperez.github.io/feeds/all.atom.xml" rel="self"></link><id>https://jorgelopezperez.github.io/</id><updated>2020-05-22T17:25:00+00:00</updated><subtitle>Just another blog about python, Django, data, maps and visualization</subtitle><entry><title>Combine Excel sheets and python with xlwings</title><link href="https://jorgelopezperez.github.io/combine-excel-sheets-and-python-with-xlwings.html" rel="alternate"></link><published>2020-05-22T17:25:00+00:00</published><updated>2020-05-22T17:25:00+00:00</updated><author><name>Jorge López Pérez</name></author><id>tag:jorgelopezperez.github.io,2020-05-22:/combine-excel-sheets-and-python-with-xlwings.html</id><content type="html"></content><category term="Data Science"></category><category term="python"></category><category term="excel"></category></entry><entry><title>How to make an API REST with Django</title><link href="https://jorgelopezperez.github.io/how-to-make-an-api-rest-with-django.html" rel="alternate"></link><published>2020-05-22T17:15:00+00:00</published><updated>2020-05-22T17:15:00+00:00</updated><author><name>Jorge López Pérez</name></author><id>tag:jorgelopezperez.github.io,2020-05-22:/how-to-make-an-api-rest-with-django.html</id><content type="html">&lt;p&gt;API REST is the new paradigma in service-oriented architectures.&lt;/p&gt;
</content><category term="Web development"></category><category term="django"></category><category term="django-rest"></category></entry><entry><title>How to set JWT in Django</title><link href="https://jorgelopezperez.github.io/how-to-set-jwt-in-django.html" rel="alternate"></link><published>2020-05-22T17:09:00+00:00</published><updated>2020-05-22T17:09:00+00:00</updated><author><name>Jorge López Pérez</name></author><id>tag:jorgelopezperez.github.io,2020-05-22:/how-to-set-jwt-in-django.html</id><content type="html">&lt;p&gt;JSON-Web-Token (JWT) is a way to authenticate applications in Django&lt;/p&gt;
</content><category term="Web development"></category><category term="django"></category></entry><entry><title>An article about Pelican II</title><link href="https://jorgelopezperez.github.io/a-second-article-about-pelican.html" rel="alternate"></link><published>2020-05-21T08:30:00+00:00</published><updated>2020-05-21T08:30:00+00:00</updated><author><name>Jorge</name></author><id>tag:jorgelopezperez.github.io,2020-05-21:/a-second-article-about-pelican.html</id><summary type="html">&lt;p class="first last"&gt;A simple summary&lt;/p&gt;
</summary><content type="html">&lt;p&gt;This is the text&lt;/p&gt;
</content><category term="articles"></category><category term="pelican"></category></entry><entry><title>Poetry and Tux</title><link href="https://jorgelopezperez.github.io/poetry-and-tux.html" rel="alternate"></link><published>2020-05-01T08:30:00+00:00</published><updated>2020-05-01T08:30:00+00:00</updated><author><name>Jorge</name></author><id>tag:jorgelopezperez.github.io,2020-05-01:/poetry-and-tux.html</id><summary type="html">&lt;p class="first last"&gt;Manage dependencies with Python&lt;/p&gt;
</summary><content type="html">&lt;p&gt;TODO&lt;/p&gt;
</content><category term="clean_code"></category><category term="python"></category><category term="clean-code"></category></entry><entry><title>An article about Pelican I</title><link href="https://jorgelopezperez.github.io/an-article-about-pelican-i.html" rel="alternate"></link><published>2019-10-20T11:20:00+00:00</published><updated>2019-10-20T11:20:00+00:00</updated><author><name>Jorge</name></author><id>tag:jorgelopezperez.github.io,2019-10-20:/an-article-about-pelican-i.html</id><summary type="html">&lt;p&gt;A simple summary&lt;/p&gt;</summary><content type="html">
&lt;h2 id="this-is-my-first-heading"&gt;This is my first heading&lt;/h2&gt;
&lt;p&gt;This is the content of my sample blog post.&lt;/p&gt;
&lt;h2 id="this-my-second-heading"&gt;This my second heading&lt;/h2&gt;
&lt;p&gt;I will end my example here.&lt;/p&gt;
&lt;h2 id="using-pelican-to-generate-static-files"&gt;Using Pelican to generate static files&lt;/h2&gt;
&lt;p&gt;An article about Pelican under articles category and articles folder inside content&lt;/p&gt;
&lt;p&gt;example of syntax highlight&lt;/p&gt;
&lt;p&gt;HI &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;abc&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="articles"></category><category term="pelican"></category><category term="tutorial"></category></entry><entry><title>An example for syntax highlight with Markdown</title><link href="https://jorgelopezperez.github.io/syntax-highlight-markdown.html" rel="alternate"></link><published>2019-10-20T11:20:00+00:00</published><updated>2019-10-20T11:20:00+00:00</updated><author><name>Jorge</name></author><id>tag:jorgelopezperez.github.io,2019-10-20:/syntax-highlight-markdown.html</id><summary type="html">&lt;p&gt;Syntax highlight&lt;/p&gt;</summary><content type="html">&lt;h2 id="syntax-highlight-in-pelican"&gt;Syntax highlight in Pelican&lt;/h2&gt;
&lt;p&gt;There are two ways to specify the identifier:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;The triple-colon syntax will *not* show line numbers.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To display line numbers, use a path-less shebang instead of colons:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;The path-less shebang syntax *will* show line numbers.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Syntax Highlight&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;abc&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code class="stylecode"&gt;Take&lt;/code&gt; a look about &lt;code class="stylecode highlight"&gt;me&lt;/code&gt;  and do not do anything    &lt;/p&gt;
&lt;p&gt;Adding an image to text&lt;/p&gt;
&lt;p&gt;&lt;img alt="my_image" src="/static/images/screenshot.png" title="Image Title on mouse-over"&gt;&lt;/p&gt;
&lt;p&gt;More highlight&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="c1"&gt;#!/usr/bin/python3&lt;/span&gt;

    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;engine&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;RunForrestRun&lt;/span&gt;

    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Test code for syntax highlighting!&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Foo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;RunForrestRun&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  &lt;span class="c1"&gt;# run along!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="articles"></category><category term="python"></category><category term="tutorial"></category></entry><entry><title>Django Oauth2</title><link href="https://jorgelopezperez.github.io/how-to-set-oauth2-in-django.html" rel="alternate"></link><published>2018-12-16T08:30:00+00:00</published><updated>2018-12-16T08:30:00+00:00</updated><author><name>Jorge</name></author><id>tag:jorgelopezperez.github.io,2018-12-16:/how-to-set-oauth2-in-django.html</id><summary type="html">&lt;p class="first last"&gt;How to set oauth2 in Django&lt;/p&gt;
</summary><content type="html">&lt;p&gt;In this article we are going to explain how to setup oauth2 in Django
A probe&lt;/p&gt;
</content><category term="Web development"></category><category term="django"></category><category term="django-rest"></category><category term="oauth2"></category></entry></feed>